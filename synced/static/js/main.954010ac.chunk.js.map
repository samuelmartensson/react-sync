{"version":3,"sources":["firebase.js","components/CreateRoomInput.jsx","utils/helpers.js","components/Queue.jsx","components/UserList.jsx","components/Player.jsx","components/Room.jsx","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","Container","styled","div","CreateRoomInput","useState","inputValue","setInputValue","history","useHistory","value","onChange","e","target","type","trim","length","onClick","id","uuid","push","ref","set","name","state","timestamp","a","fetch","res","data","json","title","QueueWrapper","Item","InputWrapper","ButtonWrap","Queue","videoIdList","setVideoIdList","error","setError","useContext","RoomContext","useEffect","on","snap","val","resize","queue","document","querySelector","video","clientHeight","window","innerWidth","style","setTimeout","addEventListener","removeEventListener","Object","entries","map","item","i","videoId","thumbnail","src","alt","placeholder","url","match","parseURLtoYoutubeID","getTitle","then","items","snippet","queueKey","player","loadVideoById","update","remove","UserList","userList","setUserList","userId","userLength","count","numChildren","onDisconnect","cancel","off","List","UserCard","Iframe","MainContainer","Wrapper","Flexbox","Player","setRoomName","YT","loadVideo","tag","createElement","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","once","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","PlayerState","PAUSED","getCurrentTime","PLAYING","BUFFERING","pauseVideo","playVideo","onVideoChange","seekTo","onTimestampChange","createContext","Room","setName","setUserId","validate","setValidate","useParams","exists","Provider","userRef","key","App","path","render","props","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","getElementById"],"mappings":"oNAeIA,E,MAAOC,EAASC,cAZL,CACbC,OAAQ,0CACRC,WAAY,mCACZC,YACE,0EACFC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAKJC,EAAWX,EAAKW,W,yICX7B,IAAMC,EAAYC,IAAOC,IAAV,KAMA,SAASC,IAAmB,IAAD,EACJC,mBAAS,IADL,mBACjCC,EADiC,KACrBC,EADqB,KAGlCC,EAAUC,cAahB,OACE,eAACR,EAAD,WACE,mDACA,uBACES,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAOL,EAAcK,EAAEC,OAAOH,QACxCI,KAAK,SAENR,EAAWS,OAAOC,OAAS,GAC1B,wBAAQC,QArBd,WACE,IAAMC,EAAKC,cACXX,EAAQY,KAAR,WAAiBF,IAOjBlB,EAASqB,IAAT,iBAAuBH,IAAMI,IAA7B,aAAmCC,KAAMjB,GALlB,CACrBkB,MAAO,EACPC,UAAW,MAeT,yB,yEC7BD,WAAwBP,GAAxB,mBAAAQ,EAAA,sEACWC,MAAM,gEAAD,OAC6CT,EAD7C,iDADhB,cACDU,EADC,gBAIYA,EAJZ,cAIDC,EAJC,gBAKaA,EAAKC,OALlB,cAKDC,EALC,yBAMEA,GANF,6C,stDCFP,IAAM9B,EAAYC,IAAOC,IAAV,KAKT6B,EAAe9B,IAAOC,IAAV,KAOZ8B,EAAO/B,IAAOC,IAAV,KAwCJ+B,EAAehC,IAAOC,IAAV,KAmBZgC,EAAajC,IAAOC,IAAV,KAaD,SAASiC,IAAS,IAAD,EACQ/B,mBAAS,IADjB,mBACvBgC,EADuB,KACVC,EADU,OAEMjC,mBAAS,IAFf,mBAEvBC,EAFuB,KAEXC,EAFW,OAGJF,mBAAS,IAHL,mBAGvBkC,EAHuB,KAGhBC,EAHgB,KAItBtB,EAAOuB,qBAAWC,GAAlBxB,GA8DR,OAhCAyB,qBAAU,WACR3C,EAASqB,IAAT,iBAAuBH,EAAvB,WAAmC0B,GAAG,SAAS,SAACC,GAC9CP,EAAeO,EAAKC,YAErB,CAAC5B,IAEJyB,qBAAU,WAER,SAASI,IACP,IAAMC,EAAQC,SAASC,cAAc,UAC/BC,EAAQF,SAASC,cAAc,WAAWE,aAC5CC,OAAOC,WAAa,KACtBN,EAAMO,MAAN,kBAAyBJ,EAAzB,MAEAH,EAAMO,MAAN,GAIY,IAAVJ,GACFK,YAAW,WACTT,MACC,KAMP,OAHAA,IACAM,OAAOI,iBAAiB,SAAUV,GAE3B,WACLM,OAAOK,oBAAoB,SAAUX,MAEtC,IAGD,eAAC,EAAD,CAAW7B,GAAG,QAAd,UACE,cAACc,EAAD,UACGK,EACCsB,OAAOC,QAAQvB,GAAawB,KAAI,SAACC,EAAMC,GAAO,IAAD,EACLD,EAAK,GAAnC/B,EADmC,EACnCA,MAAOiC,EAD4B,EAC5BA,QAASC,EADmB,EACnBA,UACxB,OACE,eAAChC,EAAD,WACE,+BAAOF,IACP,qBAAKmC,IAAKD,EAAWE,IAAI,gBAFhBH,EAAUD,MAOzB,oDAGJ,eAAC7B,EAAD,WACE,8BAAMK,GAASA,IACf,uBACE6B,YAAY,iBACZ1D,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAOL,EAAcK,EAAEC,OAAOH,UAE1C,eAACyB,EAAD,WACE,wBAAQlB,QA1EhB,WACEuB,EAAS,IACT,IAAMwB,ED3GH,SAA6BK,GAClC,IACIC,EAAQD,EAAIC,MADH,6DAEb,SAAOA,GAA6B,KAApBA,EAAM,GAAGtD,SAAgBsD,EAAM,GCwG7BC,CAAoBjE,IACpB,IAAZ0D,GDtGD,SAAP,kCCuGMQ,CAASR,GAASS,MAAK,SAAC7C,GACtB5B,EAASqB,IAAT,iBAAuBH,EAAvB,WAAmCE,KAAK,CACtCW,MAAOH,EAAI8C,MAAM,GAAGC,QAAQ5C,MAC5BiC,UACAC,UAAU,8BAAD,OAAgCD,EAAhC,eAGbzD,EAAc,KAEdiC,EAAS,gBA6DL,0BACA,wBAAQvB,QAtFhB,WAA0B,IAAD,cACO0C,OAAOC,QAAQvB,GAAa,GADnC,GAChBuC,EADgB,KAEfZ,EAFe,KAEfA,QACRX,OAAOwB,OAAOC,cAAcd,GAE5BhE,EAASqB,IAAT,iBAAuBH,IAAM6D,OAAO,CAClCf,YAEFhE,EAASqB,IAAT,iBAAuBH,EAAvB,kBAAmC0D,IAAYI,UA8EzC,2B,ysBCjLK,SAASC,IAAY,IAAD,EACD5E,mBAAS,IADR,mBAC1B6E,EAD0B,KAChBC,EADgB,OAEV1C,qBAAWC,GAA1BxB,EAFyB,EAEzBA,GAAIkE,EAFqB,EAErBA,OAENC,EAAaH,GAAYvB,OAAOC,QAAQsB,GAAUlE,OA0BxD,OAxBA2B,qBAAU,WAER,IAAI2C,EAAQ,EAcZ,OAbAtF,EAASqB,IAAT,iBAAuBH,EAAvB,WAAmC0B,GAAG,SAAS,SAACC,GAC9CsC,EAAYtC,EAAKC,OACjBwC,EAAQzC,EAAK0C,cAET1C,EAAK0C,cAAgB,EACvBvF,EAASqB,IAAT,iBAAuBH,EAAvB,kBAAmCkE,IAAUI,eAAelE,IAAI,IAGhEtB,EAASqB,IAAT,iBAAuBH,IAAMsE,eAAelE,IAAI,OAK7C,WACDgE,EAAQ,GACVtF,EAASqB,IAAT,iBAAuBH,IAAMsE,eAAeC,SAE9CzF,EAASqB,IAAT,iBAAuBH,EAAvB,WAAmCwE,IAAI,YAExC,CAACxE,EAAIkE,EAAQC,IAGd,eAAC,EAAD,WACE,iDACA,cAACM,EAAD,UACGT,GACCvB,OAAOC,QAAQsB,GAAUrB,KAAI,SAACC,GAAU,IAC9BvC,EAASuC,EAAK,GAAdvC,KACR,OAAO,cAACqE,EAAD,UAAyBrE,GAAVuC,EAAK,YAOvC,IAAM7D,EAAYC,IAAOC,IAAV,KAMTwF,EAAOzF,IAAOC,IAAV,KAOJyF,EAAW1F,IAAOC,IAAV,K,kpBCxDd,IAAM0F,EAAS3F,IAAOC,IAAV,KAWN2F,EAAgB5F,IAAOC,IAAV,KACb4F,EAAU7F,IAAOC,IAAV,KAMP6F,EAAU9F,IAAOC,IAAV,KAME,SAAS8F,EAAT,GAAyB,IAAP/E,EAAM,EAANA,GACzBG,EAAMrB,EAASqB,IAAT,iBAAuBH,IADE,EAELb,mBAAS,IAFJ,mBAEpB6F,GAFoB,WAIrCvD,qBAAU,WACR,GAAKU,OAAO8C,GASVC,QATc,CACd,IAAMC,EAAMpD,SAASqD,cAAc,UACnCD,EAAInC,IAAM,qCAEVb,OAAOkD,wBAA0BH,EAEjC,IAAMI,EAAiBvD,SAASwD,qBAAqB,UAAU,GAC/DD,EAAeE,WAAWC,aAAaN,EAAKG,MAK7C,IAEH7D,qBAAU,WACRtB,EAAIuF,KAAK,SAAS,SAAC/D,GAAD,OAAUqD,EAAYrD,EAAKC,MAAMvB,WAClD,CAACF,IAEJ,IAAM+E,EAAY,WAChB/C,OAAOwB,OAAS,IAAIxB,OAAO8C,GAAGF,OAAd,SAA+B,CAE7CjC,QAAS,cACT6C,OAAQ,CACNC,QAASC,EACTC,cAAeC,MAKrB,SAASA,EAAoBC,GACvBA,EAAMrF,OAASwB,OAAO8C,GAAGgB,YAAYC,QACvC/F,EAAI0D,OAAO,CACTvD,MAAO,EACPC,UAAWyF,EAAMrG,OAAOwG,mBAGxBH,EAAMrF,OAASwB,OAAO8C,GAAGgB,YAAYG,SACvCjG,EAAI0D,OAAO,CACTvD,MAAO,IAGP0F,EAAMrF,OAASwB,OAAO8C,GAAGgB,YAAYI,WACvClG,EAAI0D,OAAO,CACTtD,UAAWyF,EAAMrG,OAAOwG,mBA0B9B,IAAMN,EAAgB,SAACG,GArBvB,IAAqBrC,IAsBPqC,EAAMrG,OArBlBb,EAASqB,IAAT,gBAAsBH,EAAtB,WAAkC0B,GAAG,SAAS,SAACC,GAC7C,IAAMrB,EAAQqB,EAAKC,MACL,IAAVtB,EACFqD,EAAO2C,aACY,IAAVhG,GACTqD,EAAO4C,eASb,SAAuB5C,GACrB7E,EAASqB,IAAT,gBAAsBH,EAAtB,aAAoC0B,GAAG,SAAS,SAACC,GAC/CgC,EAAOC,cAAcjC,EAAKC,UAM5B4E,CAAcR,EAAMrG,QAbtB,SAA2BgE,GACzB7E,EAASqB,IAAT,gBAAsBH,EAAtB,eAAsC0B,GAAG,SAAS,SAACC,GACjDgC,EAAO8C,OAAO9E,EAAKC,UAYrB8E,CAAkBV,EAAMrG,SAG1B,OACE,eAACiF,EAAD,WAEE,eAACE,EAAD,WACE,cAACD,EAAD,UACE,cAACF,EAAD,UACE,qBAAK3E,GAAG,eAGZ,cAACkB,EAAD,OAEF,cAAC6C,EAAD,OCnHC,IAAMvC,EAAcmF,0BA+CZC,EA7CF,WAAO,IAAD,EACOzH,mBAAS,IADhB,mBACVkB,EADU,KACJwG,EADI,OAEW1H,mBAAS,MAFpB,mBAEV+E,EAFU,KAEF4C,EAFE,OAGS3H,mBAAS,IAHlB,mBAGVkC,EAHU,KAGHC,EAHG,OAIenC,oBAAS,GAJxB,mBAIV4H,EAJU,KAIAC,EAJA,KAKX7D,EAAM8D,cACR3H,EAAUC,cAqBd,OAnBAkC,qBAAU,WAER3C,EAASqB,IAAT,iBAAuBgD,EAAInD,GAA3B,UAAsC0F,KAAK,SAAS,SAAC/D,GAC9CA,EAAKuF,UACR5H,EAAQY,KAAR,UAGH,CAACZ,EAAS6D,EAAInD,KAaf,mCACI+G,EAQA,cAACvF,EAAY2F,SAAb,CAAsB3H,MAAO,CAAEQ,GAAImD,EAAInD,GAAIkE,UAA3C,SACE,cAACa,EAAD,CAAQ/E,GAAImD,EAAInD,OARlB,qCACE,iDACA,uBAAOR,MAAOa,EAAMZ,SAAU,SAACC,GAAD,OAAOmH,EAAQnH,EAAEC,OAAOH,UACtD,wBAAQO,QAhBhB,WACE,GAAIM,EAAKR,OAAOC,OAAS,EAAG,CAC1BkH,GAAY,GACZ,IAAMI,EAAUtI,EAASqB,IAAT,iBAAuBgD,EAAInD,GAA3B,WAAuCE,KAAK,CAAEG,SAC9DyG,EAAUM,EAAQC,UAElB/F,EAAS,sCAUL,kBACA,8BAAMD,GAASA,UC1BViG,MAXf,WACE,OACE,qCACE,cAAC,IAAD,CAAOC,KAAK,OAAOC,OAAQ,SAACC,GAAD,OAAW,cAAC,EAAD,eAAUA,OAChD,cAAC,IAAD,CAAOC,OAAK,EAACH,KAAK,IAAlB,SACE,cAACrI,EAAD,UCEOyI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtE,MAAK,YAAkD,IAA/CuE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCAdO,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,KAAD,CAAeC,SAAS,UAAxB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINtG,SAASuG,eAAe,SAM1BX,M","file":"static/js/main.954010ac.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n// Your web app's Firebase configuration\r\nconst config = {\r\n  apiKey: 'AIzaSyC-OD1xmL89lPzQdSXiH8npTfdsZ2a2ni0',\r\n  authDomain: 'react-sync-be90d.firebaseapp.com',\r\n  databaseURL:\r\n    'https://react-sync-be90d-default-rtdb.europe-west1.firebasedatabase.app',\r\n  projectId: 'react-sync-be90d',\r\n  storageBucket: 'react-sync-be90d.appspot.com',\r\n  messagingSenderId: '32227398414',\r\n  appId: '1:32227398414:web:85623135b9356b61f87d5f',\r\n  measurementId: 'G-910W7K34K0',\r\n};\r\n// Initialize Firebase\r\nvar fire = firebase.initializeApp(config);\r\n\r\nexport const database = fire.database();\r\n\r\nexport default fire;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { database } from '../firebase';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 400px;\r\n`;\r\n\r\nexport default function CreateRoomInput() {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const history = useHistory();\r\n  function createAndRedirect() {\r\n    const id = uuid();\r\n    history.push(`/${id}`);\r\n\r\n    const baseRoomParams = {\r\n      state: 2,\r\n      timestamp: 0,\r\n    };\r\n\r\n    database.ref(`/rooms/${id}`).set({ name: inputValue, ...baseRoomParams });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <span>Enter room name</span>\r\n      <input\r\n        value={inputValue}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n        type=\"text\"\r\n      />\r\n      {inputValue.trim().length > 2 && (\r\n        <button onClick={createAndRedirect}>New Room</button>\r\n      )}\r\n      {/* <span>Room already exists with this name!</span> */}\r\n    </Container>\r\n  );\r\n}\r\n","export const basePath = 'synced';\r\n\r\nexport function parseURLtoYoutubeID(url) {\r\n  var regExp = /.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=)([^#&?]*).*/;\r\n  var match = url.match(regExp);\r\n  return match && match[1].length === 11 ? match[1] : false;\r\n}\r\n\r\nexport async function getTitle(id) {\r\n  let res = await fetch(\r\n    `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${id}&key=AIzaSyBAsH4iNKjMo0D6Tj8PQRqCVnV-c_tPqSI`\r\n  );\r\n  let data = await res;\r\n  let title = await data.json();\r\n  return title;\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { database } from '../firebase';\r\nimport { getTitle, parseURLtoYoutubeID } from '../utils/helpers';\r\nimport { RoomContext } from './Room';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto 1fr;\r\n  flex: 0 1 400px;\r\n`;\r\nconst QueueWrapper = styled.div`\r\n  padding: 0.75rem;\r\n  overflow: auto;\r\n  h2 {\r\n    text-align: center;\r\n  }\r\n`;\r\nconst Item = styled.div`\r\n  background: #532929;\r\n  margin-bottom: 1rem;\r\n  color: white;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 0.25rem;\r\n  height: 100px;\r\n\r\n  animation: slideIn 300ms;\r\n\r\n  @keyframes slideIn {\r\n    0% {\r\n      opacity: 0;\r\n      transform: translateX(-10px);\r\n    }\r\n  }\r\n  &::after {\r\n    content: '';\r\n    background: linear-gradient(45deg, #70aee952, #2082dfd1);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n  }\r\n  span {\r\n    position: relative;\r\n    display: block;\r\n    padding: 1rem;\r\n    z-index: 999;\r\n    font-size: 1.25rem;\r\n  }\r\n  img {\r\n    position: absolute;\r\n    transform: translate(-0%, -50%);\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  margin-top: auto;\r\n  padding: 0.75rem;\r\n  padding-bottom: 0;\r\n  grid-row: 1;\r\n  @media (min-width: 1200px) {\r\n    grid-row: unset;\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    padding-left: 0.75rem;\r\n    border-radius: 200px;\r\n    border: none;\r\n    background: #f3f3f3;\r\n    width: 100%;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\nconst ButtonWrap = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  button {\r\n    flex: 1;\r\n    background: linear-gradient(45deg, #70aee9, #2082df);\r\n    color: white;\r\n    border: none;\r\n    padding: 1rem;\r\n    border-radius: 0.25rem;\r\n  }\r\n`;\r\n\r\nexport default function Queue() {\r\n  const [videoIdList, setVideoIdList] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { id } = useContext(RoomContext);\r\n\r\n  function playNextVideo() {\r\n    const [queueKey, nextVideo] = Object.entries(videoIdList)[0];\r\n    const { videoId } = nextVideo;\r\n    window.player.loadVideoById(videoId);\r\n\r\n    database.ref(`/rooms/${id}`).update({\r\n      videoId,\r\n    });\r\n    database.ref(`/rooms/${id}/queue/${queueKey}`).remove();\r\n  }\r\n\r\n  function addToQueue() {\r\n    setError('');\r\n    const videoId = parseURLtoYoutubeID(inputValue);\r\n    if (videoId !== false) {\r\n      getTitle(videoId).then((res) => {\r\n        database.ref(`/rooms/${id}/queue`).push({\r\n          title: res.items[0].snippet.title,\r\n          videoId,\r\n          thumbnail: `https://img.youtube.com/vi/${videoId}/0.jpg`,\r\n        });\r\n      });\r\n      setInputValue('');\r\n    } else {\r\n      setError('Invalid URL');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    database.ref(`/rooms/${id}/queue`).on('value', (snap) => {\r\n      setVideoIdList(snap.val());\r\n    });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    // Keeps queue height consistent with video height\r\n    function resize() {\r\n      const queue = document.querySelector('#queue');\r\n      const video = document.querySelector('#player').clientHeight;\r\n      if (window.innerWidth > 1200) {\r\n        queue.style = `height: ${video}px`;\r\n      } else {\r\n        queue.style = ``;\r\n      }\r\n      // Calls itself if video has not loaded yet (height === 0), timeout to avoid max callstack\r\n      // Probably a bad solution\r\n      if (video === 0) {\r\n        setTimeout(() => {\r\n          resize();\r\n        }, 1000);\r\n      }\r\n    }\r\n    resize();\r\n    window.addEventListener('resize', resize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container id=\"queue\">\r\n      <QueueWrapper>\r\n        {videoIdList ? (\r\n          Object.entries(videoIdList).map((item, i) => {\r\n            const { title, videoId, thumbnail } = item[1];\r\n            return (\r\n              <Item key={videoId + i}>\r\n                <span>{title}</span>\r\n                <img src={thumbnail} alt=\"thumbnail\" />\r\n              </Item>\r\n            );\r\n          })\r\n        ) : (\r\n          <h2>No videos queued</h2>\r\n        )}\r\n      </QueueWrapper>\r\n      <InputWrapper>\r\n        <div>{error && error}</div>\r\n        <input\r\n          placeholder=\"YouTube URL...\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n        />\r\n        <ButtonWrap>\r\n          <button onClick={addToQueue}>Add to queue</button>\r\n          <button onClick={playNextVideo}>Next</button>\r\n        </ButtonWrap>\r\n      </InputWrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { database } from '../firebase';\r\nimport { RoomContext } from './Room';\r\nimport styled from 'styled-components';\r\n\r\nexport default function UserList() {\r\n  const [userList, setUserList] = useState([]);\r\n  const { id, userId } = useContext(RoomContext);\r\n\r\n  const userLength = userList && Object.entries(userList).length;\r\n\r\n  useEffect(() => {\r\n    // Removes user from userlist when user disconnects from room\r\n    let count = 0;\r\n    database.ref(`/rooms/${id}/users`).on('value', (snap) => {\r\n      setUserList(snap.val());\r\n      count = snap.numChildren();\r\n\r\n      if (snap.numChildren() > 1) {\r\n        database.ref(`/rooms/${id}/users/${userId}`).onDisconnect().set({});\r\n      } else {\r\n        // If the user is the last person in the room delete the room instead\r\n        database.ref(`/rooms/${id}`).onDisconnect().set({});\r\n      }\r\n    });\r\n\r\n    // Cleanup if \"host\" changes, makes sure to reset so data is not stale\r\n    return () => {\r\n      if (count > 1) {\r\n        database.ref(`/rooms/${id}`).onDisconnect().cancel();\r\n      }\r\n      database.ref(`/rooms/${id}/users`).off('value');\r\n    };\r\n  }, [id, userId, userLength]);\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Connected users</h2>\r\n      <List>\r\n        {userList &&\r\n          Object.entries(userList).map((item) => {\r\n            const { name } = item[1];\r\n            return <UserCard key={item[0]}>{name}</UserCard>;\r\n          })}\r\n      </List>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 0.75rem;\r\n  h2 {\r\n    margin: 0;\r\n  }\r\n`;\r\nconst List = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst UserCard = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  width: 100px;\r\n  height: 120px;\r\n  overflow: hidden;\r\n  word-break: break-all;\r\n  background: linear-gradient(45deg, #70aee9, #2082df);\r\n  color: white;\r\n  padding: 1rem;\r\n  border-radius: 1rem;\r\n\r\n  animation: slideIn 300ms;\r\n\r\n  @keyframes slideIn {\r\n    0% {\r\n      opacity: 0;\r\n      transform: translateX(-10px);\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { database } from '../firebase';\r\nimport Queue from './Queue';\r\nimport UserList from './UserList';\r\nimport styled from 'styled-components';\r\n\r\nconst Iframe = styled.div`\r\n  position: relative;\r\n  padding-bottom: 56.25%; /* 16:9, for an aspect ratio of 1:1 change to this value to 100% */\r\n  iframe {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\nconst MainContainer = styled.div``;\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  @media (min-width: 1200px) {\r\n    width: 80%;\r\n  }\r\n`;\r\nconst Flexbox = styled.div`\r\n  padding-bottom: 1rem;\r\n  @media (min-width: 1200px) {\r\n    display: flex;\r\n  }\r\n`;\r\nexport default function Player({ id }) {\r\n  const ref = database.ref(`/rooms/${id}`);\r\n  const [roomName, setRoomName] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!window.YT) {\r\n      const tag = document.createElement('script');\r\n      tag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n      window.onYouTubeIframeAPIReady = loadVideo;\r\n\r\n      const firstScriptTag = document.getElementsByTagName('script')[0];\r\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n    } else {\r\n      loadVideo();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    ref.once('value', (snap) => setRoomName(snap.val().name));\r\n  }, [ref]);\r\n\r\n  const loadVideo = () => {\r\n    window.player = new window.YT.Player(`player`, {\r\n      // Get video ID from database\r\n      videoId: 'xfdue4jdow0',\r\n      events: {\r\n        onReady: onPlayerReady,\r\n        onStateChange: onPlayerStateChange,\r\n      },\r\n    });\r\n  };\r\n\r\n  function onPlayerStateChange(event) {\r\n    if (event.data === window.YT.PlayerState.PAUSED) {\r\n      ref.update({\r\n        state: 1,\r\n        timestamp: event.target.getCurrentTime(),\r\n      });\r\n    }\r\n    if (event.data === window.YT.PlayerState.PLAYING) {\r\n      ref.update({\r\n        state: 0,\r\n      });\r\n    }\r\n    if (event.data === window.YT.PlayerState.BUFFERING) {\r\n      ref.update({\r\n        timestamp: event.target.getCurrentTime(),\r\n      });\r\n    }\r\n  }\r\n\r\n  function onPlayPause(player) {\r\n    database.ref(`rooms/${id}/state`).on('value', (snap) => {\r\n      const state = snap.val();\r\n      if (state === 1) {\r\n        player.pauseVideo();\r\n      } else if (state === 0) {\r\n        player.playVideo();\r\n      }\r\n    });\r\n  }\r\n  function onTimestampChange(player) {\r\n    database.ref(`rooms/${id}/timestamp`).on('value', (snap) => {\r\n      player.seekTo(snap.val());\r\n    });\r\n  }\r\n  function onVideoChange(player) {\r\n    database.ref(`rooms/${id}/videoId`).on('value', (snap) => {\r\n      player.loadVideoById(snap.val());\r\n    });\r\n  }\r\n\r\n  const onPlayerReady = (event) => {\r\n    onPlayPause(event.target);\r\n    onVideoChange(event.target);\r\n    onTimestampChange(event.target);\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      {/* <h1>{roomName}</h1> */}\r\n      <Flexbox>\r\n        <Wrapper>\r\n          <Iframe>\r\n            <div id=\"player\"></div>\r\n          </Iframe>\r\n        </Wrapper>\r\n        <Queue />\r\n      </Flexbox>\r\n      <UserList />\r\n    </MainContainer>\r\n  );\r\n}\r\n","import React, { useState, createContext, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { database } from '../firebase';\r\nimport { basePath } from '../utils/helpers';\r\nimport Player from './Player';\r\n\r\nexport const RoomContext = createContext();\r\n\r\nconst Room = () => {\r\n  const [name, setName] = useState('');\r\n  const [userId, setUserId] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [validate, setValidate] = useState(false);\r\n  const url = useParams();\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // Redirect to homepage if room does not exist\r\n    database.ref(`/rooms/${url.id}/name`).once('value', (snap) => {\r\n      if (!snap.exists()) {\r\n        history.push(`/`);\r\n      }\r\n    });\r\n  }, [history, url.id]);\r\n\r\n  function joinRoom() {\r\n    if (name.trim().length > 2) {\r\n      setValidate(true);\r\n      const userRef = database.ref(`/rooms/${url.id}/users`).push({ name });\r\n      setUserId(userRef.key);\r\n    } else {\r\n      setError('Name must be 3 or more characters');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!validate ? (\r\n        <>\r\n          <h2>Enter your name</h2>\r\n          <input value={name} onChange={(e) => setName(e.target.value)} />\r\n          <button onClick={joinRoom}>Join</button>\r\n          <div>{error && error}</div>\r\n        </>\r\n      ) : (\r\n        <RoomContext.Provider value={{ id: url.id, userId }}>\r\n          <Player id={url.id} />\r\n        </RoomContext.Provider>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CreateRoomInput from './components/CreateRoomInput';\nimport Room from './components/Room';\n\nfunction App() {\n  return (\n    <>\n      <Route path=\"/:id\" render={(props) => <Room {...props} />} />\n      <Route exact path=\"/\">\n        <CreateRoomInput />\n      </Route>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport { BrowserRouter, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/synced\">\n      <Switch>\n        <App />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}